@use "sass:map";

// @use 'colors/colors-blue' as color-theme;
// @use 'colors/colors-green' as color-theme;
// @use 'colors/colors-indigo' as color-theme;
// @use 'colors/colors-orange' as color-theme;
// @use 'colors/colors-red' as color-theme;
@use 'colors/colors-teal' as color-theme;

$grey-lighten-5: #eeeeee;
$grey-lighten-4: #dbdbdb;
$grey-lighten-3: #c9c9c9;
$grey-lighten-2: #b2b2b2;
$grey-lighten-1: #a5a5a5;
$grey-medium:    #959595;
$grey-darken-1:  #7e7e7e;
$grey-darken-2:  #676767;
$grey-darken-3:  #5e5e5e;
$grey-darken-4:  #535353;
$grey-darken-5:  #202020;

$color-accent-transparent-medium: rgba(color-theme.$medium, 0.1);
$color-accent-transparent-light: rgba(color-theme.$medium, 0.05);

$vars: (
    color-theme: (
        light: white,
        dark: black,
    ),

    color-page-background: (
        light: #ededed,
        dark: #232323,
    ),
    page-background-image: (
        light: url('../images/noise-light.png'),
        dark: url('../images/noise-dark.png'),
    ),

    color-block-background: (
        light: #{$grey-lighten-5},
        dark: #{$grey-darken-5},
    ),
    color-block-border: (
        light: 1px solid #{$grey-lighten-3},
        dark: 1px solid #{$grey-darken-4},
    ),

    color-title: (
        light: #{$grey-darken-4},
        dark: #{$grey-lighten-5},
    ),
    color-text: (
        light: #{$grey-darken-2},
        dark: #{$grey-lighten-4},
    ),

    color-block-actionitem: (
        light: #{$grey-darken-3},
        dark: #{$grey-lighten-4},
    ),
    color-block-actionitem-hover: (
        light: #{$grey-darken-1},
        dark: #{$grey-lighten-5},
    ),
    color-block-actionitem-active: (
        light: #{$grey-darken-4},
        dark: #{$grey-lighten-3},
    ),

    color-scrollbar: (
        light: #{$grey-lighten-1},
        dark: #{$grey-darken-1},
    ),
    color-scrollbar-hover: (
        light: #{$grey-lighten-2},
        dark: #{$grey-medium},
    ),
    color-scrollbar-active: (
        light: #{$grey-medium},
        dark: #{$grey-darken-2},
    ),

    color-control-neutral: (
        light: #{$grey-lighten-3},
        dark: #{$grey-darken-3},
    ),
    color-control-accent: (
        light: #{color-theme.$medium},
        dark: #{color-theme.$lighten-1},
    ),
    color-control-accent-hover: (
        light: #{color-theme.$lighten-1},
        dark: #{color-theme.$lighten-2},
    ),
    color-control-accent-active: (
        light: #{color-theme.$darken-1},
        dark: #{color-theme.$medium},
    ),
);

@function compute-var-name($var-map-name) {
    @return --var-#{$var-map-name};
}

@mixin list-vars-values($attribute-name) {
    @each $var-map-name, $var-map in $vars {
        $var-value: map.get($var-map, $attribute-name);
        @if not $var-value {
            @error 'ERROR: missing property "' + $attribute-name + '" was in variable "' + $var-map-name + '".';
        }

        $var-name: compute-var-name($var-map-name);
        #{$var-name}: #{$var-value};
    }
}

@mixin declare-css-variables() {
    :root {
        @include list-vars-values(light);

        @media (prefers-color-scheme: dark) {
            @include list-vars-values(dark);
        }
    }
}

@mixin color-accent-transparent($property, $opacity) {
    #{$property}: rgba(color-theme.$medium, $opacity);
}

@mixin use-css-variable($property, $variable-name) {
    $default-property: light;
    $variable-map: map.get($vars, $variable-name);
    @if not $variable-map {
        @error 'ERROR: missing variable "' + $variable-name + '".';
    }
    $default-value: map.get(map.get($vars, $variable-name), $default-property);
    @if not $default-value {
        @error 'ERROR: missing default property "' + $default-property + '" was in variable "' + $variable-name + '".';
    }

    // sass-lint:disable-block no-duplicate-properties
    #{$property}: $default-value; // fallback for IE11
    #{$property}: var(#{compute-var-name($variable-name)}, $default-value);
}

@mixin color-theme($property) {
    @include use-css-variable($property, color-theme);
}

@mixin color-control-neutral($property) {
    @include use-css-variable($property, color-control-neutral);
}

@mixin color-control-accent($property) {
    @include use-css-variable($property, color-control-accent);
}

@mixin color-control-accent-hover($property) {
    @include use-css-variable($property, color-control-accent-hover);
}

@mixin color-control-accent-active($property) {
    @include use-css-variable($property, color-control-accent-active);
}

@mixin color-control-accent-disabled($property) {
    #{$property}: $grey-lighten-1;
}

@mixin page-theme {
    @include use-css-variable(background, color-page-background);
    @include use-css-variable(background-image, page-background-image);
    @include use-css-variable(color, color-text);
}

@mixin color-title($property) {
    @include use-css-variable($property, color-title);
}

@mixin color-title-interactible($property) {
    @include color-title($property);
}

@mixin block-background-color($property) {
    @include use-css-variable($property, color-block-background);
}

@mixin block-border($property) {
    @include use-css-variable($property, color-block-border);
}

@mixin block-actionitem($property) {
    @include use-css-variable($property, color-block-actionitem);

    &:focus,
    &:hover {
        @include use-css-variable($property, color-block-actionitem-hover);
    }

    &:active {
        @include use-css-variable($property, color-block-actionitem-active);
    }
}

@mixin scrollbar-color($property) {
    @include use-css-variable($property, color-scrollbar);

    &:focus,
    &:hover {
        @include use-css-variable($property, color-scrollbar-hover);
    }

    &:active {
        @include use-css-variable($property, color-scrollbar-active);
    }
}
